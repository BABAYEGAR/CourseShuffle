@using CourseShuffle.Data.Factory.FactoryData
@using CourseShuffle.Data.Objects.Entities
@using CourseShuffle.Data.Service.Enum
@model CourseShuffle.Data.Objects.Entities.Contents

@{
    long courseId = ViewBag.CourseId;
    ViewBag.Title = "Create";
    var pdfContent = new ContentFactory().GetCourseContentsByContentType(courseId, ContentType.Pdf.ToString());
    var wordContent = new ContentFactory().GetCourseContentsByContentType(courseId, ContentType.WordDocuments.ToString());
    var webContent = new ContentFactory().GetCourseContentsByContentType(courseId, ContentType.Website.ToString());
    var audioContent = new ContentFactory().GetCourseContentsByContentType(courseId, ContentType.Audio.ToString());
    var videoContent = new ContentFactory().GetCourseContentsByContentType(courseId, ContentType.Video.ToString());

    var loggedinuser = Session["courseshuffleloggedinuser"] as AppUser;
}

@section css{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="~/Scripts/plugins/Form/css/select2.css" rel="stylesheet"/>
    <link href="//cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" rel="stylesheet" />
}
@if (TempData["content"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
    {
        <div class="alert alert-success alert-dismissable" style="height: 30px">@TempData["content"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
    {
        <div class="alert alert-danger alert-dismissable" style="height: 30px">@TempData["content"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
    {
        <div class="alert alert-info alert-dismissable" style="height: 30px">@TempData["content"]</div>
    }
}

@using (Html.BeginForm("Create", "Contents", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    {
        courseId = ViewBag.CourseId;
        @Html.Hidden("CourseId", courseId)
    }
    if (loggedinuser != null)
    {
        <div class="row">
            <div class="form-horizontal">
                <h4>Contents</h4>
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-3"})
                    <div class="col-sm-6 col-md-9">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.ContentType, new {@class = "control-label col-md-3 col-sm-3"})
                    <div class="col-sm-6 col-md-9">
                        @Html.DropDownList("ContentType", EnumHelper.GetSelectList(typeof(ContentType)), "select a content Type", new {@class = "form-control select-dropdown", id = "contentType"})
                    </div>

                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Author, new {@class = "control-label col-md-3"})
                    <div class="col-sm-6 col-md-9">
                        @Html.EditorFor(model => model.Author, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Author, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Year, new {@class = "control-label col-md-3"})
                    <div class="col-sm-6 col-md-9">
                        @Html.EditorFor(model => model.Year, new {htmlAttributes = new {@class = "form-control datepicker"}})
                        @Html.ValidationMessageFor(model => model.Year, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group col-md-12" id="file">
                    @Html.LabelFor(model => model.File, new {@class = "control-label col-md-3"})
                    <div class="col-sm-6 col-md-9">
                        <input type="file" name="file" id="file" style="width: 100%;"/>
                        @Html.ValidationMessageFor(model => model.File, "", new {@class = "text-danger"})
                    </div>

                </div>
                <div class="form-group col-md-12" id="linkText">
                    @Html.LabelFor(model => model.LinkText, new {@class = "control-label col-md-3"})
                    <div class="col-sm-6 col-md-9">
                        @Html.EditorFor(model => model.LinkText, new {htmlAttributes = new {@class = "form-control datepicker"}})
                        @Html.ValidationMessageFor(model => model.LinkText, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <input type="submit" value="Create" class="btn btn-primary pull-right"/>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row">
    <div class="panel-body">
    <div class="tabbable">
    <ul class="nav nav-tabs nav-tabs-highlight nav-justified">
        <li class="active">
            <a data-toggle="tab" href="#active">Pdf</a>
        </li>
        <li>
            <a data-toggle="tab" href="#word">Word Document</a>
        </li>
        <li>
            <a data-toggle="tab" href="#audio">Audio</a>
        </li>
        <li>
            <a data-toggle="tab" href="#video">Video</a>
        </li>
        <li>
            <a data-toggle="tab" href="#website">Website</a>
        </li>
    </ul>

    <div class="tab-content">
    <div id="active" class="tab-pane fade in active">
        <table class="table table-condensed table-hover" id="datatable">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>

                <th>Action</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var item in pdfContent)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    @if (loggedinuser != null)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new {id = item.ContentsId}, new {@class = "btn btn-primary"}) |
                            <a href="../../UploadedFiles/@ContentType.Pdf.ToString()/@item.File" target="_blank" class="btn btn-warning">View Content</a>|
                            @Html.ActionLink("Delete", "Delete", new {id = item.ContentsId}, new {@class = "btn btn-danger"})
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="../../UploadedFiles/@ContentType.Pdf.ToString()/@item.File" target="_blank" class="btn btn-warning">View Content</a>
                        </td>
                    }

                </tr>
            }
            </tbody>
        </table>
    </div>
    <div id="word" class="tab-pane fade">
        <table class="table table-condensed table-hover" id="datatable1">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>

                <th>Action</th>
            </tr>
            </thead>


            @foreach (var item in wordContent)
            {
                <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    @if (loggedinuser != null)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new {id = item.ContentsId}, new {@class = "btn btn-primary"}) |
                            <a href="../../UploadedFiles/@ContentType.Pdf.ToString()/@item.File" target="_blank" class="btn btn-warning">View Content</a>|
                            @Html.ActionLink("Delete", "Delete", new {id = item.ContentsId}, new {@class = "btn btn-danger"})
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="../../UploadedFiles/@ContentType.WordDocuments.ToString()/@item.File" target="_blank" class="btn btn-warning">View Content</a>
                        </td>
                    }
                </tr>
                </tbody>
            }

        </table>

    </div>
    <div id="audio" class="tab-pane fade">
        <table class="table table-condensed table-hover" id="datatable2">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>

                <th>Action</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var item in audioContent)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    @if (loggedinuser != null)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new {id = item.ContentsId}, new {@class = "btn btn-primary"}) |
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>|
                            @Html.ActionLink("Delete", "Delete", new {id = item.ContentsId}, new {@class = "btn btn-danger"})
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>

    </div>
    <div id="video" class="tab-pane fade">

        <table class="table table-condensed table-hover" id="datatable3">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>

                <th>Action</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var item in videoContent)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    @if (loggedinuser != null)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new {id = item.ContentsId}, new {@class = "btn btn-primary"}) |
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>|
                            @Html.ActionLink("Delete", "Delete", new {id = item.ContentsId}, new {@class = "btn btn-danger"})
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div id="website" class="tab-pane fade">

        <table class="table table-condensed table-hover" id="datatable4">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>

                <th>Action</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var item in webContent)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    @if (loggedinuser != null)
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new {id = item.ContentsId}, new {@class = "btn btn-primary"}) |
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>|
                            @Html.ActionLink("Delete", "Delete", new {id = item.ContentsId}, new {@class = "btn btn-danger"})
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="@item.LinkText" target="_blank" class="btn btn-warning">View Content</a>
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
    </div>
    </div>
    </div>
    </div>
}
@section scripts{
    <script src="~/Scripts/plugins/Form/js/select2.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script>
        $(document)
            .ready(function() {

                // Init select2 for dropdown select
                $('.select-dropdown').select2();
                $('#datatable').DataTable();
                $('#datatable1').DataTable();
                $('#datatable2').DataTable();
                $('#datatable3').DataTable();
                $('#datatable4').DataTable();
                $(function() {
                    $('.datepicker')
                        .datepicker({
                            format: 'yyyy',
                            viewMode: 'years',
                            minViewMode: 'years',
                            endDate: new Date()
                        });
                });
                $("#file").hide(0);
                $("#linkText").hide(0);
                var type = $("#contentType");
                type.change(function() {
                    var sel = $(this).val(),
                        contentType = $("#linkText"),
                        file = $("#file");
                    if (sel === "0" || sel === "1") {
                        file.show(100);
                        contentType.hide(0);
                    } else if (sel === "2" || sel === "3" || sel === "4") {
                        file.hide(0);
                        contentType.show(100);
                    } else {
                        file.hide(0);
                        contentType.hide(0);
                    }
                });
            })
    </script>
}